// async function startingCall() {
    //     navigator.mediaDevices.getUserMedia({video:true,audio:true}).then(stream => {
    //         console.log(stream);
    //     }).catch(err => err.message).finally(() => {console.log("call finally")})
    //     const dc = pc.createDataChannel("audio_call")
    //     dc.onopen = e => console.log("data channel opened")
    //     dc.onmessage = e => console.log("onmessage " + e.data)
    //     pc.createOffer().then(offer => {
    //         pc.setLocalDescription(offer)
    //     })
    //     let i = 0;
    //     pc.onicecandidate = () => {
    //         if (i === 0) {
    //             socket.emit("call_user", {
    //                 from: { socket: socket.id, name: user.name },
    //                 to: { socket: chatUser.socket, name: chatUser.name },
    //                 dataSignal: pc.localDescription
    //             })
    //         }
    //         i++;
    //     }
    // }

    // useEffect(() => {
    //     // const pc = new RTCPeerConnection();
    //     socket.on("call_ringing", async (data) => {
    //         const answeringCall = window.confirm(data.from.name + " calling you, would u want to take it?")
    //         if (answeringCall) {
    //             pc.onicecandidate = () => {
    //                 // console.log("onicecandidate" + JSON.stringify(pc.localDescription))
    //                 socket.emit("call_ringing", { ...data, dataSignal: pc.localDescription })
    //             };
    //             pc.setRemoteDescription(data.dataSignal).then(() => {

    //             }).catch(err => console.log(err.message))
    //             pc.ondatachannel = e => {
    //                 e.channel.onopen = () => console.log("data channel opened");
    //                 e.channel.onmessage = dcData => console.log("on message ", dcData.data); // comming message
    //             }
    //             const answer = await pc.createAnswer()
    //             pc.setLocalDescription(answer)
    //         }
    //     })
    //     socket.on("call_recieving_again", (data) => {
    //         pc.setRemoteDescription(data.dataSignal)
    //     })
    // }, [])